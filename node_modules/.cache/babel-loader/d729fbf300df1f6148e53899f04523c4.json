{"remainingRequest":"D:\\blog\\node_modules\\babel-loader\\lib\\index.js!D:\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\blog\\src\\components\\Navigation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\blog\\src\\components\\Navigation.vue","mtime":1562291210106},{"path":"D:\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\blog\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  el: '#nav'\n};\n\nvar anim = function anim(ms) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nfunction chainAnim(_x) {\n  return _chainAnim.apply(this, arguments);\n}\n\nfunction _chainAnim() {\n  _chainAnim = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(animations) {\n    var ret, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, an;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ret = null;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context.prev = 4;\n            _iterator = animations[Symbol.iterator]();\n\n          case 6:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              _context.next = 15;\n              break;\n            }\n\n            an = _step.value;\n            _context.next = 10;\n            return anim(an);\n\n          case 10:\n            ret = _context.sent;\n            console.log(an);\n\n          case 12:\n            _iteratorNormalCompletion = true;\n            _context.next = 6;\n            break;\n\n          case 15:\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](4);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 21:\n            _context.prev = 21;\n            _context.prev = 22;\n\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n\n          case 24:\n            _context.prev = 24;\n\n            if (!_didIteratorError) {\n              _context.next = 27;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 27:\n            return _context.finish(24);\n\n          case 28:\n            return _context.finish(21);\n\n          case 29:\n            return _context.abrupt(\"return\", ret);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 17, 21, 29], [22,, 24, 28]]);\n  }));\n  return _chainAnim.apply(this, arguments);\n}\n\nvar res = chainAnim([1000, 2000, 3000]);",{"version":3,"sources":["Navigation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAWA,eAAA;AACA,EAAA,EAAA,EAAA;AADA,CAAA;;AAGA,IAAA,IAAA,GAAA,SAAA,IAAA,CAAA,EAAA,EAAA;AAEA,SAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAEA,IAAA,UAAA,CAAA,YAAA;AAEA,MAAA,OAAA,CAAA,EAAA,CAAA;AAEA,KAJA,EAIA,EAJA,CAAA;AAMA,GARA,CAAA;AAUA,CAZA;;SAcA,S;;;;;;;0BAAA,iBAAA,UAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,YAAA,GAFA,GAEA,IAFA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIA,UAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,YAAA,EAJA;AAAA;AAAA,mBAMA,IAAA,CAAA,EAAA,CANA;;AAAA;AAMA,YAAA,GANA;AAQA,YAAA,OAAA,CAAA,GAAA,CAAA,EAAA;;AARA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,6CAYA,GAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBA,IAAA,GAAA,GAAA,SAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA","sourcesContent":["<template>\n  <nav class=\"nav\">\n    <a href=\"article.html\">首页</a>\n    <a href=\"article.html\">分类</a>\n    <a href=\"article.html\">友链</a>\n    <a href=\"article.html\">关于</a>\n    <Icon type=\"ios-checkmark\" />\n  </nav>\n</template>\n\n<script>\nexport default {\n  el:'#nav'\n}\nvar anim = function (ms) {\n\n    return new Promise((resolve, reject) => {\n\n        setTimeout(() => {\n\n            resolve(ms);\n\n        }, ms);\n\n    });\n\n};\n\nasync function chainAnim (animations) {\n\n    let ret = null;\n\n    for (let an of animations) {\n\n        ret = await anim(an);\n\n        console.log(an);\n\n    }\n\n    return ret;\n\n}\n\nlet res = chainAnim([1000, 2000, 3000]);\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.nav{\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n}\n.nav a{\n  margin-right: 15px;\n  font-size: 14px;\n  transition-property: border-color;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in-out;\n  transition-delay: 0s;\n  color: #222;\n  line-height: 20px;\n  padding-bottom: 1.5px;\n}\n.nav a:first-child{\n  border-bottom: 1.5px solid #111;\n}\n</style>\n"],"sourceRoot":"src/components"}]}